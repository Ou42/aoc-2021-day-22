module Remnant where

import Cuboid (Cuboid)
{- | A `Cuboid` list of non-intersecting cuboids
   | generated by recursively recursively performing a `RebootStep`
   | upon all the cuboids.
-}
type Remnant = [ Cuboid ]

{- | return the first Cuboid and the remnant
   | of the second Cuboid.
   |
   | Properties
   |
   | 1. The combined volumes of the remnant == combined volumes of the 1st cuboid and the 2nd cuboid
   |    minus their intersection
-}
augment :: Cuboid -> Cuboid -> Remnant
augment source target = [] -- TODO

{- | return the remnant of subtracting the first
   | Cuboid from the second.
   |
   | Properties:
   |
   | 1. The combined volumes of the remnant == 2nd Cuboid's volume - the volume of the 2 cuboids' intersection
-}
reduce :: Cuboid -> Cuboid -> Remnant
reduce source target = [] -- TODO
