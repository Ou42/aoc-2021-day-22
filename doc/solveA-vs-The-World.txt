2022-04-08 - TESTS

*Day22> d <- readFile i3
*Day22> as = allSteps d
*Day22> sas = map snd as
*Day22> take 4 as
                                    [('+',  [(-32,18),(-49,-2),(-43, 3)])
                                    ,('+',  [(-15,35),(-31,16),( -9,43)])
                                    ,('+',  [(-22,23),(  2,47),(-35,13)])
                                    ,('+',  [(-45, 8),(-18,27),(-34,17)])]
*Day22> take 4 sas
                                    [       [(-32,18),(-49,-2),(-43, 3)]
                                    ,       [(-15,35),(-31,16),( -9,43)]
                                    ,       [(-22,23),(  2,47),(-35,13)]
                                    ,       [(-45, 8),(-18,27),(-34,17)]]
*Day22> unlines $ take 4 $ lines d
                                   "on x=-32..18,y=-49..-2,z=-43.. 3\n
                                    on x=-15..35,y=-31..16,z= -9..43\n
                                    on x=-22..23,y=  2..47,z=-35..13\n
                                    on x=-45.. 8,y=-18..27,z=-34..17\n"

-- comparing result of the above 4 -- does NOT match:
*Day22> solveA $ unlines $ take 4 $ lines d
376667
*Day22> vol $ runAddOnCLst $ take 4 sas
535460

-- comparing result of the first 3 -- DOES match:
*Day22> solveA $ unlines $ take 3 $ lines d
321769
*Day22> vol $ runAddOnCLst $ take 3 sas
321769

======

*Day22 Data.List> d <- readFile i3
*Day22 Data.List> as = allSteps d
*Day22 Data.List> sas = map snd as
*Day22 Data.List> ra3 = runAddOnCLst $ take 3 sas
*Day22 Data.List> (init . tails) ra3
[[[(-22,23),(2,47),(-35,13)],[(24,35),(-31,16),(-9,43)],[(-15,23),(-31,1),(-9,43)],[(-15,23),(2,16),(14,43)],[(-32,-16),(-49,-2),(-43,3)],[(-15,18),(-49,-32),(-43,3)],[(-15,18),(-31,-2),(-43,-10)]],[[(24,35),(-31,16),(-9,43)],[(-15,23),(-31,1),(-9,43)],[(-15,23),(2,16),(14,43)],[(-32,-16),(-49,-2),(-43,3)],[(-15,18),(-49,-32),(-43,3)],[(-15,18),(-31,-2),(-43,-10)]],[[(-15,23),(-31,1),(-9,43)],[(-15,23),(2,16),(14,43)],[(-32,-16),(-49,-2),(-43,3)],[(-15,18),(-49,-32),(-43,3)],[(-15,18),(-31,-2),(-43,-10)]],[[(-15,23),(2,16),(14,43)],[(-32,-16),(-49,-2),(-43,3)],[(-15,18),(-49,-32),(-43,3)],[(-15,18),(-31,-2),(-43,-10)]],[[(-32,-16),(-49,-2),(-43,3)],[(-15,18),(-49,-32),(-43,3)],[(-15,18),(-31,-2),(-43,-10)]],[[(-15,18),(-49,-32),(-43,3)],[(-15,18),(-31,-2),(-43,-10)]],[[(-15,18),(-31,-2),(-43,-10)]]]

*Day22 Data.List> iFreeAll cuLstLst = foldl (\accu (cu:cus) -> (map (intersectUsingSets cu) cus):accu) [] ((init . tails) cuLstLst)
*Day22 Data.List> iFreeAll ra3
[[],[False],[False,False],[False,False,False],[False,False,False,False],[False,False,False,False,False],[False,False,False,False,False,False]]

*Day22 Data.List> ra4 = runAddOnCLst $ take 4 sas
*Day22 Data.List> iFreeAll ra4
[[],[False],[False,False],[False,False,False],[False,False,False,False]
,[False,False,False,False,False],[False,False,False,False,False,True]   <== TRUE?!
,[False,False,False,False,False,False,True],[False,False,False,False,False,False,False,True],[False,False,False,False,False,False,True,False,False],[False,False,False,False,False,False,False,True,False,False],[False,False,False,False,False,False,False,True,False,False,False],[False,False,False,False,False,False,False,False,True,False,False,False],[False,False,False,False,False,False,False,False,True,False,False,False,False],[False,False,False,False,False,False,False,False,False,True,False,False,False,False],[False,False,False,False,False,False,False,False,False,False,True,False,False,False,False],[False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False],[False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False],[False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False],[False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,False,True]]

OK, assuming intersectUsingSets is sound, we know the *add* or *diffUsingSets* isn't.
. instead of trying to debug *afterwards* what if we could error out when it messes up?!

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

*Day22 Data.List> d <- readFile i3
*Day22 Data.List> as = allSteps d
*Day22 Data.List> sas = map snd as
*Day22 Data.List> ra3 = runAddOnCLstDebug $ take 3 sas
*Day22 Data.List> ra4 = runAddOnCLstDebug $ take 4 sas
*Day22 Data.List> ra3
[[(-22,23),(2,47),(-35,13)],[(24,35),(-31,16),(-9,43)],[(-15,23),(-31,1),(-9,43)],[(-15,23),(2,16),(14,43)],[(-32,-16),(-49,-2),(-43,3)],[(-15,18),(-49,-32),(-43,3)],[(-15,18),(-31,-2),(-43,-10)]]
*Day22 Data.List> ra4
*** Exception: [[(-45,8),(-18,27),(-34,17)],[(9,23),(2,47),(-35,13)],[(-22,8),(28,47),(-35,13)],[(-22,8),(2,27),(-35,-35)],[(9,23),(-31,1),(-9,43)],[(-15,8),(-31,-19),(-9,43)],[(-15,8),(-18,1),(18,43)],[(9,23),(2,16),(14,43)],[(-15,8),(2,16),(18,43)],[(-32,-16),(-49,-19),(-43,3)],[(-32,-16),(-18,-2),(-43,-35)],[(9,18),(-31,-2),(-43,-10)],[(-15,8),(-31,-19),(-43,-10)],[(-15,8),(-18,-2),(-43,-35)],[(24,35),(-31,16),(-9,43)],[(-15,23),(-31,1),(-9,43)],[(-15,23),(2,16),(14,43)],[(-32,-16),(-49,-2),(-43,3)],[(-15,18),(-49,-32),(-43,3)],[(-15,18),(-31,-2),(-43,-10)]]
CallStack (from HasCallStack):
  error, called at src/Day22.hs:164:40 in main:Day22
*Day22 Data.List> prob = [[(-45,8),(-18,27),(-34,17)],[(9,23),(2,47),(-35,13)],[(-22,8),(28,47),(-35,13)],[(-22,8),(2,27),(-35,-35)],[(9,23),(-31,1),(-9,43)],[(-15,8),(-31,-19),(-9,43)],[(-15,8),(-18,1),(18,43)],[(9,23),(2,16),(14,43)],[(-15,8),(2,16),(18,43)],[(-32,-16),(-49,-19),(-43,3)],[(-32,-16),(-18,-2),(-43,-35)],[(9,18),(-31,-2),(-43,-10)],[(-15,8),(-31,-19),(-43,-10)],[(-15,8),(-18,-2),(-43,-35)],[(24,35),(-31,16),(-9,43)],[(-15,23),(-31,1),(-9,43)],[(-15,23),(2,16),(14,43)],[(-32,-16),(-49,-2),(-43,3)],[(-15,18),(-49,-32),(-43,3)],[(-15,18),(-31,-2),(-43,-10)]]
*Day22 Data.List> :t prob
prob :: (Num a, Num b) => [[(a, b)]]

=====

*Day22 Data.List> iFreeProbs ra4
*** Exception: [[(-45,8),(-18,27),(-34,17)],[(9,23),(2,47),(-35,13)],[(-22,8),(28,47),(-35,13)],[(-22,8),(2,27),(-35,-35)],[(9,23),(-31,1),(-9,43)],[(-15,8),(-31,-19),(-9,43)],[(-15,8),(-18,1),(18,43)],[(9,23),(2,16),(14,43)],[(-15,8),(2,16),(18,43)],[(-32,-16),(-49,-19),(-43,3)],[(-32,-16),(-18,-2),(-43,-35)],[(9,18),(-31,-2),(-43,-10)],[(-15,8),(-31,-19),(-43,-10)],[(-15,8),(-18,-2),(-43,-35)],[(24,35),(-31,16),(-9,43)],[(-15,23),(-31,1),(-9,43)],[(-15,23),(2,16),(14,43)],[(-32,-16),(-49,-2),(-43,3)],[(-15,18),(-49,-32),(-43,3)],[(-15,18),(-31,-2),(-43,-10)]]
CallStack (from HasCallStack):
  error, called at src/Day22.hs:167:40 in main:Day22
*Day22 Data.List> ra4' = [[(-45,8),(-18,27),(-34,17)],[(9,23),(2,47),(-35,13)],[(-22,8),(28,47),(-35,13)]
                         ,[(-22,8),(2,27),(-35,-35)],[(9,23),(-31,1),(-9,43)],[(-15,8),(-31,-19),(-9,43)]
                         ,[(-15,8),(-18,1),(18,43)],[(9,23),(2,16),(14,43)],[(-15,8),(2,16),(18,43)]
                         ,[(-32,-16),(-49,-19),(-43,3)],[(-32,-16),(-18,-2),(-43,-35)],[(9,18),(-31,-2),(-43,-10)]
                         ,[(-15,8),(-31,-19),(-43,-10)],[(-15,8),(-18,-2),(-43,-35)],[(24,35),(-31,16),(-9,43)]
                         ,[(-15,23),(-31,1),(-9,43)],[(-15,23),(2,16),(14,43)],[(-32,-16),(-49,-2),(-43,3)]
                         ,[(-15,18),(-49,-32),(-43,3)],[(-15,18),(-31,-2),(-43,-10)]]
*Day22 Data.List> iFreeProbs ra4'
[[],[[]],[[],[]],[[],[],[]],[[],[],[],[]],[[],[],[],[],[]],[[],[],[],[],[],[42]]
,[[],[],[],[],[],[],[42]],[[],[],[],[],[],[],[],[42]],[[],[],[],[],[],[],[42],[],[]]
,[[],[],[],[],[],[],[],[42],[],[]],[[],[],[],[],[],[],[],[42],[],[],[]],[[],[],[],[],[],[],[],[],[42],[],[],[]]
,[[],[],[],[],[],[],[],[],[42],[],[],[],[]],[[],[],[],[],[],[],[],[],[],[42],[],[],[],[]]
,[[],[],[],[],[],[],[],[],[],[],[42],[],[],[],[]],[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]
,[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]
,[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[42],[42],[42],[],[42]]]

*Day22 Data.List> filter (not . null) $ concat $ iFreeProbs2 ra4prob
[ [[(-15,8),(-18,-2),(-43,-35)],[(-15,18),(-31,-2),(-43,-10)]]
, [[(-15,8),(-31,-19),(-43,-10)],[(-15,18),(-31,-2),(-43,-10)]],[[(9,18),(-31,-2),(-43,-10)],[(-15,18),(-31,-2),(-43,-10)]],[[(-32,-16),(-18,-2),(-43,-35)],[(-32,-16),(-49,-2),(-43,3)]],[[(-32,-16),(-49,-19),(-43,3)],[(-32,-16),(-49,-2),(-43,3)]],[[(-15,8),(2,16),(18,43)],[(-15,23),(2,16),(14,43)]],[[(9,23),(2,16),(14,43)],[(-15,23),(2,16),(14,43)]],[[(-15,8),(-18,1),(18,43)],[(-15,23),(-31,1),(-9,43)]],[[(-15,8),(-31,-19),(-9,43)],[(-15,23),(-31,1),(-9,43)]],[[(9,23),(-31,1),(-9,43)],[(-15,23),(-31,1),(-9,43)]],[[(-45,8),(-18,27),(-34,17)],[(-15,23),(-31,1),(-9,43)]],[[(-45,8),(-18,27),(-34,17)],[(-15,23),(2,16),(14,43)]],[[(-45,8),(-18,27),(-34,17)],[(-32,-16),(-49,-2),(-43,3)]],[[(-45,8),(-18,27),(-34,17)],[(-15,18),(-31,-2),(-43,-10)]]]

*Day22 Data.List> diffUsingSets [(-15,8),(-18,-2),(-43,-35)] [(-15,18),(-31,-2),(-43,-10)]
[] <=== should NOT be empty! right?!

*Day22 Data.List> intersectUsingSets [(-15,8),(-18,-2),(-43,-35)] [(-15,18),(-31,-2),(-43,-10)]
True
*Day22 Data.List> intersectUsingSets2 [(-15,8),(-18,-2),(-43,-35)] [(-15,18),(-31,-2),(-43,-10)]
(True,[(-15,8),(-18,-2),(-43,-35)]) <== that's the intersection... it is completely contained in x's